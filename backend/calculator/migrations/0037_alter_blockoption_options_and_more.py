# Generated by Django 4.2.13 on 2024-09-28 13:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("product", "0035_imageworks_created_at_imageworks_updated_at_and_more"),
        ("calculator", "0036_remove_pricelist_date_blockoption_created_at_and_more"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="blockoption",
            options={
                "ordering": ("position",),
                "verbose_name": "Опция блока",
                "verbose_name_plural": "Опции блока",
            },
        ),
        migrations.RemoveField(
            model_name="blockoption",
            name="amount_depend",
        ),
        migrations.RemoveField(
            model_name="blockoption",
            name="block_amount_undependent",
        ),
        migrations.RemoveField(
            model_name="blockoption",
            name="filters",
        ),
        migrations.RemoveField(
            model_name="blockoption",
            name="initial_value",
        ),
        migrations.RemoveField(
            model_name="blockoption",
            name="name",
        ),
        migrations.RemoveField(
            model_name="blockoption",
            name="price",
        ),
        migrations.RemoveField(
            model_name="blockoption",
            name="product",
        ),
        migrations.RemoveField(
            model_name="blockoption",
            name="variability_with_block_amount",
        ),
        migrations.AddField(
            model_name="blockoption",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_%(app_label)s.%(class)s_set+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.CreateModel(
            name="ValueOption",
            fields=[
                (
                    "blockoption_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="calculator.blockoption",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Имя переменной для формулы",
                        max_length=40,
                        verbose_name="Имя",
                    ),
                ),
                (
                    "variability_with_block_amount",
                    models.BooleanField(
                        default=False,
                        help_text="Нельзя использовать вместе с категорией продукции",
                        verbose_name="Изменяется вместе с кол-вом в блоке",
                    ),
                ),
                (
                    "initial_value",
                    models.IntegerField(
                        blank=True,
                        help_text="Можно оставить пустым для 1 (при условии, что выбрана изменяемость)",
                        null=True,
                        verbose_name="Начальное числовое значение",
                    ),
                ),
                (
                    "price",
                    models.ForeignKey(
                        blank=True,
                        help_text="Связать с ценой из прайс листа",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="calculator.price",
                    ),
                ),
            ],
            options={
                "verbose_name": "Опция со значением",
                "verbose_name_plural": "Опции со значениями",
            },
            bases=("calculator.blockoption",),
        ),
        migrations.CreateModel(
            name="ProductOption",
            fields=[
                (
                    "blockoption_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="calculator.blockoption",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Имя поля модели", max_length=40, verbose_name="Имя"
                    ),
                ),
                (
                    "filters",
                    models.TextField(
                        blank=True,
                        help_text="Фильтры перечисленые через запятую.\nДоступные операторы:\n1. Равенство: ==.\n2. Неравенство: !=.\n3. Больше: >.\n4. Меньше: <.\n5. Больше или равно: >=.\n6. Меньше или равно: <=.\nПример: type == HD, price <= 1000",
                        null=True,
                        verbose_name="Фильтры для товара",
                    ),
                ),
                (
                    "block_amount_undependent",
                    models.BooleanField(
                        default=False,
                        help_text="Не будет учитываться если нет связи с категорией продукции",
                        verbose_name="Кол-во товара не зависит от кол-ва в самом блоке",
                    ),
                ),
                (
                    "amount_depend",
                    models.CharField(
                        blank=True,
                        help_text="Название переменной другой опции из этого блока",
                        null=True,
                        verbose_name="Кол-во товара зависит от переменной",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="product.productcategory",
                        verbose_name="Категория товара для фильтрации",
                    ),
                ),
            ],
            options={
                "verbose_name": "Опция с товаром",
                "verbose_name_plural": "Опции с товарами",
            },
            bases=("calculator.blockoption",),
        ),
    ]

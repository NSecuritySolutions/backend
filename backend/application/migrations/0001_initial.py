# Generated by Django 4.2.13 on 2024-08-27 23:20

import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("product", "0034_alter_solutiontoproduct_amount"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Имя")),
                ("email", models.EmailField(max_length=254, verbose_name="Почта")),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=20, region=None, verbose_name="Номер телефона"
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        max_length=2000,
                        null=True,
                        verbose_name="Комментарий",
                    ),
                ),
                ("date", models.DateTimeField(auto_now=True, verbose_name="Дата")),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заявка",
                "verbose_name_plural": "Заявки",
            },
        ),
        migrations.CreateModel(
            name="CalculatorBlockData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(verbose_name="Название")),
                ("price", models.IntegerField(verbose_name="Стоимость")),
                ("amount", models.IntegerField(verbose_name="Кол-во")),
            ],
        ),
        migrations.CreateModel(
            name="CalculatorData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.IntegerField(verbose_name="Общая стоимость")),
            ],
        ),
        migrations.CreateModel(
            name="ApplicationWithCalculator",
            fields=[
                (
                    "application_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="application.application",
                    ),
                ),
            ],
            options={
                "verbose_name": "Завка с калькулятором",
                "verbose_name_plural": "Заявки с калькулятором",
            },
            bases=("application.application",),
        ),
        migrations.CreateModel(
            name="ApplicationWithFile",
            fields=[
                (
                    "application_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="application.application",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Приложенный файл",
                    ),
                ),
            ],
            options={
                "verbose_name": "Обычная заявка",
                "verbose_name_plural": "Обычные заявки",
            },
            bases=("application.application",),
        ),
        migrations.CreateModel(
            name="OptionData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(verbose_name="Название")),
                ("value", models.CharField(verbose_name="Значение")),
                (
                    "block_data",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="application.calculatorblockdata",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="calculatorblockdata",
            name="calculator_data",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="blocks",
                to="application.calculatordata",
            ),
        ),
        migrations.CreateModel(
            name="CalculatorBlockCategoryProductsData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "block_data",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products_category",
                        to="application.calculatorblockdata",
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(
                        blank=True,
                        to="product.product",
                        verbose_name="Подходящие товары",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="calculatordata",
            name="application",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="calculator",
                to="application.applicationwithcalculator",
            ),
        ),
        migrations.CreateModel(
            name="ApplicationWithSolution",
            fields=[
                (
                    "application_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="application.application",
                    ),
                ),
                (
                    "solution",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="product.readysolution",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заявка на готовое решение",
                "verbose_name_plural": "Заявки на готовое решение",
            },
            bases=("application.application",),
        ),
    ]
